swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: 'urn:tos'
  contact: {}
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: 'localhost:8080'
basePath: /
tags:
  - name: basic-error-controller
    description: Basic Error Controller
  - name: group-controller
    description: Group Controller
  - name: group-rest-controller
    description: Group Rest Controller
  - name: index-controller
    description: Index Controller
  - name: lesson-controller
    description: Lesson Controller
  - name: lesson-rest-controller
    description: Lesson Rest Controller
  - name: professor-controller
    description: Professor Controller
  - name: professor-rest-controller
    description: Professor Rest Controller
  - name: statistics-controller
    description: Statistics Controller
  - name: statistics-rest-controller
    description: Statistics Rest Controller
  - name: timetable-controller
    description: Timetable Controller
  - name: timetable-rest-controller
    description: Timetable Rest Controller
  - name: views-controller
    description: Views Controller
paths:
  /:
    get:
      tags:
        - index-controller
      summary: getIndexPage
      operationId: getIndexPageUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/get/groups/html:
    get:
      tags:
        - views-controller
      summary: getGroups
      operationId: getGroupsUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/get/index/html:
    get:
      tags:
        - views-controller
      summary: getIndex
      operationId: getIndexUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/get/lessons/html:
    get:
      tags:
        - views-controller
      summary: getLessons
      operationId: getLessonsUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/get/professors/html:
    get:
      tags:
        - views-controller
      summary: getProfessors
      operationId: getProfessorsUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/get/sorry/html:
    get:
      tags:
        - views-controller
      summary: getErrorPage
      operationId: getErrorPageUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/get/statistics/html:
    get:
      tags:
        - views-controller
      summary: getStatistics
      operationId: getStatisticsUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/get/timetable/html:
    get:
      tags:
        - views-controller
      summary: getTimetable
      operationId: getTimetableUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/rest/delete/group/json:
    delete:
      tags:
        - group-rest-controller
      summary: remove
      operationId: removeUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: groupid
          in: query
          description: groupid
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Group'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/rest/delete/lesson/json:
    delete:
      tags:
        - lesson-rest-controller
      summary: remove
      operationId: removeUsingDELETE_1
      produces:
        - '*/*'
      parameters:
        - name: lessonId
          in: query
          description: lessonId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Lesson'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/rest/delete/professor/json:
    delete:
      tags:
        - professor-rest-controller
      summary: remove
      operationId: removeUsingDELETE_2
      produces:
        - '*/*'
      parameters:
        - name: professorId
          in: query
          description: professorId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Professor'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /api/rest/get/group-employment:
    get:
      tags:
        - statistics-rest-controller
      summary: getGroupEmployment
      operationId: getGroupEmploymentUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: from
          in: query
          description: from
          required: true
          type: string
          format: date
        - name: groupId
          in: query
          description: groupId
          required: true
          type: integer
          format: int32
        - name: till
          in: query
          description: till
          required: true
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int64
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/rest/get/group-timetable:
    get:
      tags:
        - timetable-rest-controller
      summary: getGroupEmployment
      operationId: getGroupEmploymentUsingGET_3
      produces:
        - '*/*'
      parameters:
        - name: from
          in: query
          description: from
          required: true
          type: string
          format: date
        - name: groupId
          in: query
          description: groupId
          required: true
          type: integer
          format: int32
        - name: till
          in: query
          description: till
          required: true
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Lesson'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/rest/get/group/json/id/{id}':
    get:
      tags:
        - group-rest-controller
      summary: getById
      operationId: getByIdUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Group'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/rest/get/group/json/name/{name}':
    get:
      tags:
        - group-rest-controller
      summary: getByName
      operationId: getByNameUsingGET
      produces:
        - '*/*'
      parameters:
        - name: name
          in: path
          description: name
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/rest/get/group/json/surname/{surname}':
    get:
      tags:
        - professor-rest-controller
      summary: getBySurname
      operationId: getBySurnameUsingGET
      produces:
        - '*/*'
      parameters:
        - name: surname
          in: path
          description: surname
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Professor'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/rest/get/groups/json:
    get:
      tags:
        - group-rest-controller
      summary: getAll
      operationId: getAllUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/rest/get/lesson/json/id/{id}':
    get:
      tags:
        - lesson-rest-controller
      summary: getById
      operationId: getByIdUsingGET_3
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Lesson'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/rest/get/lessons/json:
    get:
      tags:
        - lesson-rest-controller
      summary: getAll
      operationId: getAllUsingGET_2
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Lesson'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/rest/get/professor-employment:
    get:
      tags:
        - statistics-rest-controller
      summary: getProfessorEmployment
      operationId: getProfessorEmploymentUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: from
          in: query
          description: from
          required: true
          type: string
          format: date
        - name: professorId
          in: query
          description: professorId
          required: true
          type: integer
          format: int32
        - name: till
          in: query
          description: till
          required: true
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int64
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/rest/get/professor-timetable:
    get:
      tags:
        - timetable-rest-controller
      summary: getProfessorEmployment
      operationId: getProfessorEmploymentUsingGET_3
      produces:
        - '*/*'
      parameters:
        - name: from
          in: query
          description: from
          required: true
          type: string
          format: date
        - name: professorId
          in: query
          description: professorId
          required: true
          type: integer
          format: int32
        - name: till
          in: query
          description: till
          required: true
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Lesson'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/rest/get/professor/json/id/{id}':
    get:
      tags:
        - professor-rest-controller
      summary: getById
      operationId: getByIdUsingGET_5
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Professor'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/rest/get/professors/json:
    get:
      tags:
        - professor-rest-controller
      summary: getAll
      operationId: getAllUsingGET_3
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Professor'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/rest/post/group/json:
    post:
      tags:
        - group-rest-controller
      summary: add
      operationId: addUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: name
          in: query
          description: name
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Group'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/rest/post/lesson/json:
    post:
      tags:
        - lesson-rest-controller
      summary: add
      operationId: addUsingPOST_3
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: building
          in: query
          description: building
          required: true
          type: string
        - name: classroom
          in: query
          description: classroom
          required: true
          type: string
        - name: date
          in: query
          description: date
          required: true
          type: string
          format: date
        - name: groupId
          in: query
          description: groupId
          required: true
          type: integer
          format: int32
        - name: lessonNumber
          in: query
          description: lessonNumber
          required: true
          type: integer
          format: int32
        - name: professorId
          in: query
          description: professorId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Lesson'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/rest/post/professor/json:
    post:
      tags:
        - professor-rest-controller
      summary: add
      operationId: addUsingPOST_4
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: name
          in: query
          description: name
          required: true
          type: string
        - name: patronymic
          in: query
          description: patronymic
          required: true
          type: string
        - name: subject
          in: query
          description: subject
          required: true
          type: string
        - name: surname
          in: query
          description: surname
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Professor'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/rest/put/group/json:
    put:
      tags:
        - group-rest-controller
      summary: update
      operationId: updateUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: query
          description: id
          required: true
          type: integer
          format: int32
        - name: name
          in: query
          description: name
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Group'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/rest/put/lesson/json:
    put:
      tags:
        - lesson-rest-controller
      summary: update
      operationId: updateUsingPUT_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: building
          in: query
          description: building
          required: true
          type: string
        - name: classroom
          in: query
          description: classroom
          required: true
          type: string
        - name: date
          in: query
          description: date
          required: true
          type: string
          format: date
        - name: groupId
          in: query
          description: groupId
          required: true
          type: integer
          format: int32
        - name: id
          in: query
          description: id
          required: false
          type: integer
          default: 0
          format: int32
        - name: lessonNumber
          in: query
          description: lessonNumber
          required: true
          type: integer
          format: int32
        - name: professorId
          in: query
          description: professorId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Lesson'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /api/rest/put/professor/json:
    put:
      tags:
        - professor-rest-controller
      summary: update
      operationId: updateUsingPUT_2
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: query
          description: id
          required: true
          type: integer
          format: int32
        - name: name
          in: query
          description: name
          required: true
          type: string
        - name: patronymic
          in: query
          description: patronymic
          required: true
          type: string
        - name: subject
          in: query
          description: subject
          required: true
          type: string
        - name: surname
          in: query
          description: surname
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Professor'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /error:
    get:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    head:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingHEAD
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingDELETE
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    options:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingOPTIONS
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /groups:
    get:
      tags:
        - group-controller
      summary: getGroupsViewAndAllGroups
      operationId: getGroupsViewAndAllGroupsUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /groups/add:
    post:
      tags:
        - group-controller
      summary: add
      operationId: addUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: newName
          in: query
          description: newName
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/groups/getById/{id}':
    get:
      tags:
        - group-controller
      summary: getById
      operationId: getByIdUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /groups/remove:
    post:
      tags:
        - group-controller
      summary: remove
      operationId: removeUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: query
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /groups/update:
    post:
      tags:
        - group-controller
      summary: update
      operationId: updateUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: query
          description: id
          required: true
          type: integer
          format: int32
        - name: newName
          in: query
          description: newName
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /lessons:
    get:
      tags:
        - lesson-controller
      summary: getAll
      operationId: getAllUsingGET_1
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /lessons/add:
    post:
      tags:
        - lesson-controller
      summary: add
      operationId: addUsingPOST_2
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: building
          in: query
          description: building
          required: true
          type: string
        - name: classroom
          in: query
          description: classroom
          required: true
          type: string
        - name: date
          in: query
          description: date
          required: true
          type: string
          format: date
        - name: groupId
          in: query
          description: groupId
          required: true
          type: integer
          format: int32
        - name: lessonNumber
          in: query
          description: lessonNumber
          required: true
          type: integer
          format: int32
        - name: professorId
          in: query
          description: professorId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/lessons/getById/{id}':
    get:
      tags:
        - lesson-controller
      summary: getById
      operationId: getByIdUsingGET_2
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /lessons/remove:
    post:
      tags:
        - lesson-controller
      summary: remove
      operationId: removeUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: query
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /lessons/update:
    post:
      tags:
        - lesson-controller
      summary: update
      operationId: updateUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: building
          in: query
          description: building
          required: true
          type: string
        - name: classroom
          in: query
          description: classroom
          required: true
          type: string
        - name: date
          in: query
          description: date
          required: true
          type: string
          format: date
        - name: groupId
          in: query
          description: groupId
          required: true
          type: integer
          format: int32
        - name: id
          in: query
          description: id
          required: false
          type: integer
          default: 0
          format: int32
        - name: lessonNumber
          in: query
          description: lessonNumber
          required: true
          type: integer
          format: int32
        - name: professorId
          in: query
          description: professorId
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /professors:
    get:
      tags:
        - professor-controller
      summary: getProfessorsViewAndAllProfessors
      operationId: getProfessorsViewAndAllProfessorsUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /professors/add:
    post:
      tags:
        - professor-controller
      summary: save
      operationId: saveUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: newName
          in: query
          description: newName
          required: true
          type: string
        - name: newPatronymic
          in: query
          description: newPatronymic
          required: true
          type: string
        - name: newSubject
          in: query
          description: newSubject
          required: true
          type: string
        - name: newSurname
          in: query
          description: newSurname
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/professors/getById/{id}':
    get:
      tags:
        - professor-controller
      summary: getById
      operationId: getByIdUsingGET_4
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /professors/remove:
    post:
      tags:
        - professor-controller
      summary: remove
      operationId: removeUsingPOST_2
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: query
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /professors/update:
    post:
      tags:
        - professor-controller
      summary: update
      operationId: updateUsingPOST_2
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: query
          description: id
          required: false
          type: integer
          default: 0
          format: int32
        - name: newName
          in: query
          description: newName
          required: true
          type: string
        - name: newPatronymic
          in: query
          description: newPatronymic
          required: true
          type: string
        - name: newSubject
          in: query
          description: newSubject
          required: true
          type: string
        - name: newSurname
          in: query
          description: newSurname
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /statistics:
    get:
      tags:
        - statistics-controller
      summary: getStatisticsPage
      operationId: getStatisticsPageUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /statistics/get_group_employment:
    get:
      tags:
        - statistics-controller
      summary: getGroupEmployment
      operationId: getGroupEmploymentUsingGET
      produces:
        - '*/*'
      parameters:
        - name: from
          in: query
          description: from
          required: true
          type: string
          format: date
        - name: groupId
          in: query
          description: groupId
          required: true
          type: integer
          format: int32
        - name: till
          in: query
          description: till
          required: true
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int64
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /statistics/get_professor_employment:
    get:
      tags:
        - statistics-controller
      summary: getProfessorEmployment
      operationId: getProfessorEmploymentUsingGET
      produces:
        - '*/*'
      parameters:
        - name: from
          in: query
          description: from
          required: true
          type: string
          format: date
        - name: professorId
          in: query
          description: professorId
          required: true
          type: integer
          format: int32
        - name: till
          in: query
          description: till
          required: true
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int64
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /timetable:
    get:
      tags:
        - timetable-controller
      summary: getTimetablePage
      operationId: getTimetablePageUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /timetable/get_group_timetable:
    get:
      tags:
        - timetable-controller
      summary: getGroupEmployment
      operationId: getGroupEmploymentUsingGET_2
      produces:
        - '*/*'
      parameters:
        - name: from
          in: query
          description: from
          required: true
          type: string
          format: date
        - name: groupId
          in: query
          description: groupId
          required: true
          type: integer
          format: int32
        - name: till
          in: query
          description: till
          required: true
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Lesson'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /timetable/get_professor_timetable:
    get:
      tags:
        - timetable-controller
      summary: getProfessorEmployment
      operationId: getProfessorEmploymentUsingGET_2
      produces:
        - '*/*'
      parameters:
        - name: from
          in: query
          description: from
          required: true
          type: string
          format: date
        - name: professorId
          in: query
          description: professorId
          required: true
          type: integer
          format: int32
        - name: till
          in: query
          description: till
          required: true
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Lesson'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  Group:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
    title: Group
  Lesson:
    type: object
    properties:
      building:
        type: string
      classroom:
        type: string
      date:
        type: string
        format: date
      groupId:
        type: integer
        format: int32
      id:
        type: integer
        format: int32
      lessonNumber:
        type: integer
        format: int32
      professorId:
        type: integer
        format: int32
    title: Lesson
  ModelAndView:
    type: object
    properties:
      empty:
        type: boolean
      model:
        type: object
      modelMap:
        type: object
        additionalProperties:
          type: object
      reference:
        type: boolean
      status:
        type: string
        enum:
          - ACCEPTED
          - ALREADY_REPORTED
          - BAD_GATEWAY
          - BAD_REQUEST
          - BANDWIDTH_LIMIT_EXCEEDED
          - CHECKPOINT
          - CONFLICT
          - CONTINUE
          - CREATED
          - DESTINATION_LOCKED
          - EXPECTATION_FAILED
          - FAILED_DEPENDENCY
          - FORBIDDEN
          - FOUND
          - GATEWAY_TIMEOUT
          - GONE
          - HTTP_VERSION_NOT_SUPPORTED
          - IM_USED
          - INSUFFICIENT_SPACE_ON_RESOURCE
          - INSUFFICIENT_STORAGE
          - INTERNAL_SERVER_ERROR
          - I_AM_A_TEAPOT
          - LENGTH_REQUIRED
          - LOCKED
          - LOOP_DETECTED
          - METHOD_FAILURE
          - METHOD_NOT_ALLOWED
          - MOVED_PERMANENTLY
          - MOVED_TEMPORARILY
          - MULTIPLE_CHOICES
          - MULTI_STATUS
          - NETWORK_AUTHENTICATION_REQUIRED
          - NON_AUTHORITATIVE_INFORMATION
          - NOT_ACCEPTABLE
          - NOT_EXTENDED
          - NOT_FOUND
          - NOT_IMPLEMENTED
          - NOT_MODIFIED
          - NO_CONTENT
          - OK
          - PARTIAL_CONTENT
          - PAYLOAD_TOO_LARGE
          - PAYMENT_REQUIRED
          - PERMANENT_REDIRECT
          - PRECONDITION_FAILED
          - PRECONDITION_REQUIRED
          - PROCESSING
          - PROXY_AUTHENTICATION_REQUIRED
          - REQUESTED_RANGE_NOT_SATISFIABLE
          - REQUEST_ENTITY_TOO_LARGE
          - REQUEST_HEADER_FIELDS_TOO_LARGE
          - REQUEST_TIMEOUT
          - REQUEST_URI_TOO_LONG
          - RESET_CONTENT
          - SEE_OTHER
          - SERVICE_UNAVAILABLE
          - SWITCHING_PROTOCOLS
          - TEMPORARY_REDIRECT
          - TOO_EARLY
          - TOO_MANY_REQUESTS
          - UNAUTHORIZED
          - UNAVAILABLE_FOR_LEGAL_REASONS
          - UNPROCESSABLE_ENTITY
          - UNSUPPORTED_MEDIA_TYPE
          - UPGRADE_REQUIRED
          - URI_TOO_LONG
          - USE_PROXY
          - VARIANT_ALSO_NEGOTIATES
      view:
        $ref: '#/definitions/View'
      viewName:
        type: string
    title: ModelAndView
  Professor:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      patronymic:
        type: string
      subject:
        type: string
      surname:
        type: string
    title: Professor
  View:
    type: object
    properties:
      contentType:
        type: string
    title: View
